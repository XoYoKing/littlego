Purpose of this document
------------------------
This document contains notes about various aspects of the project configuration
file Info.plist.


The version number
------------------
The application's version number is stored in the bundle's Info.plist file.
According to Apple's "Information Property List Key Reference" (available at
[1]), there are two keys that are relevant for versioning:
- CFBundleShortVersionString: A string consisting of three period-separated
  integers. This key refers to the so-called "release version number".
  Apparently it is possible to localize this string, but why one would want to
  do this is beyond me (also the specification "three period-separated integers"
  in my opinion does not leave any room for localization). Xcode 4 displays the
  value of this key on the "Summary" page of each target, as the field labeled
  "Version".
- CFBundleVersion: A monotonically increased string consisting of of one or
  more period-separated integers. This refers to the so-called "build version
  number". Xcode 4 displays the value of this key on the "Summary" page of each
  target, as the field labeled "Build".

Although I don't have a use for CFBundleVersion, and the Xcode user guide
(section "Building and Running Your Code") does not even mention it, the App
Store validation process forces me to add this key to Info.plist.

[1] https://developer.apple.com/library/mac/#documentation/General/Reference/InfoPlistKeyReference/
[2] https://developer.apple.com/library/ios/#documentation/ToolsLanguages/Conceptual/Xcode4UserGuide/Building/Building.html


Application icons
-----------------
Application icons used to be specified using the CFBundleIcons key in the
bundle's Info.plist file. This is no longer the case: Application icons are
now stored in an asset catalog, and the reference to the icons is made in the
project file using the setting ASSETCATALOG_COMPILER_APPICON_NAME.


Launch screen
-------------
Historical notes:
- Up until iOS 7 the only way to display a launch screen were launch images.
- Beginning with iOS 8 (Xcode 6) it became possible to use a storyboard as a
  launch screen. Using a launch screen storyboard was optional - unless an app
  wanted to support the iPad Pro's native screen resolution, in which case using
  a launch screen storyboard was mandatory.
- In order to support both iOS 7 (and older) and the iPad Pro native screen
  resolution, a project had to include both launch images and a launch screen
  storyboard.
- Beginning with iOS 13 (Xcode 11) launch images were deprecated.

This project no longer contains any launch images, because it no longer supports
iOS 7 (and older). This project now uses only a launch screen storyboard. The
reference to the launch screen storyboard is made in the bundle's Info.plist
file using the UILaunchStoryboardName key. If separate launch screens are
desired for iPhone and iPad, the usual "~iphone" and "~ipad" suffixes can be
added to the key.

The launch screen storyboard is ultra-simple, showing a pseudo-logo that is
nothing but a label with the text "Little Go". It would be preferrable to have
one or more launch screens that duplicate the different launch images, but this
is not possible because there is no way to provide different content for
iPhone 6+ and smaller iPhones merely based on size classes as the
distinguishing factor (no other logic than size classes can be used in launch
screen storyboards).


Device capabilities
-------------------
The content of the key UIRequiredDeviceCapabilities lets the App Store know
which device-related features an app requires in order to run. The App Store
uses this list to prevent people from installing apps on a device that does not
support the listed capabilities.

This project lists "armv7" as a capability to indicate that devices which don't
support this architecture (iPhone 3G and older) cannot run the app.
